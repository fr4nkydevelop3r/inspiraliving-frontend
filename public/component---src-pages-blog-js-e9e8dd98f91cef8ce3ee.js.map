{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/card.js","webpack://gatsby-starter-default/./src/components/articles.js","webpack://gatsby-starter-default/./src/pages/blog.js"],"names":["article","Link","to","node","slug","className","id","category","name","title","data-uk-grid","writer","articles","leftArticlesCount","Math","ceil","length","leftArticles","slice","rightArticles","map","i","key","query","data","useStaticQuery","strapiGlobal","site","siteMetadata","languages","locales","defaultLocale","seo","global","pageContext","locale","allStrapiArticle","edges"],"mappings":"0NA+BA,EA3Ba,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACd,OACE,gBAAC,EAAAC,KAAD,CAAMC,GAAE,YAAcF,EAAQG,KAAKC,KAAQC,UAAU,iBACnD,uBAAKA,UAAU,yBACb,uBAAKA,UAAU,gBACb,qBAAGC,GAAG,WAAWD,UAAU,qBACxBL,EAAQG,KAAKI,SAASC,MAEzB,qBAAGF,GAAG,QAAQD,UAAU,iBACrBL,EAAQG,KAAKM,OAEhB,2BACE,sBAAIJ,UAAU,qBACd,uBAAKA,UAAU,6BAA6BK,eAAa,QACvD,uBAAKL,UAAU,mBACb,qBAAGA,UAAU,2BACVL,EAAQG,KAAKQ,OAAOH,aCkBvC,EAnCiB,SAAC,GAAkB,IAAhBI,EAAe,EAAfA,SACZC,EAAoBC,KAAKC,KAAKH,EAASI,OAAS,GAChDC,EAAeL,EAASM,MAAM,EAAGL,GACjCM,EAAgBP,EAASM,MAAML,EAAmBD,EAASI,QAEjE,OACE,2BACE,uBAAKX,UAAU,uBAAuBK,eAAa,QACjD,2BACGO,EAAaG,KAAI,SAACpB,EAASqB,GAC1B,OACE,gBAAC,EAAD,CACErB,QAASA,EACTsB,IAAG,kBAAoBtB,EAAQG,KAAKC,WAK5C,2BACE,uBAAKC,UAAU,qCAAqCK,gBAAA,GACjDS,EAAcC,KAAI,SAACpB,EAASqB,GAC3B,OACE,gBAAC,EAAD,CACErB,QAASA,EACTsB,IAAG,mBAAqBtB,EAAQG,KAAKC,eCajDmB,EAAK,aA+BX,EAhEa,WACX,IAAMC,GAAOC,oBAAeF,GAE1BG,EAMEF,EANFE,aAHe,EASbF,EALFG,KACEC,aACEC,UAAaC,EANF,EAMEA,QAASC,EANX,EAMWA,cAI5B,OACE,gCACE,gBAAC,IAAD,CAAKC,IAAK,CAAEvB,MAAO,kBAAoBwB,OAAQP,IAE/C,gBAAC,IAAD,CACEQ,YAAa,CACXC,OAAQJ,EACRD,UACAC,gBACA3B,KAAM,QAER6B,OAAQP,GAER,uBAAKrB,UAAU,cACb,uBAAKA,UAAU,mCACb,gBAAC,EAAD,CAAmBO,SAAUY,EAAKY,iBAAiBC","file":"component---src-pages-blog-js-e9e8dd98f91cef8ce3ee.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst Card = ({ article }) => {\n  return (\n    <Link to={`/article/${article.node.slug}`} className=\"uk-link-reset\">\n      <div className=\"uk-card uk-card-muted\">\n        <div className=\"uk-card-body\">\n          <p id=\"category\" className=\"uk-text-uppercase\">\n            {article.node.category.name}\n          </p>\n          <p id=\"title\" className=\"uk-text-large\">\n            {article.node.title}\n          </p>\n          <div>\n            <hr className=\"uk-divider-small\" />\n            <div className=\"uk-grid-small uk-flex-left\" data-uk-grid=\"true\">\n              <div className=\"uk-width-expand\">\n                <p className=\"uk-margin-remove-bottom\">\n                  {article.node.writer.name}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Link>\n  )\n}\n\nexport default Card\n","import React from \"react\"\nimport Card from \"./card\"\n\nconst Articles = ({ articles }) => {\n  const leftArticlesCount = Math.ceil(articles.length / 5)\n  const leftArticles = articles.slice(0, leftArticlesCount)\n  const rightArticles = articles.slice(leftArticlesCount, articles.length)\n\n  return (\n    <div>\n      <div className=\"uk-child-width-1-2@s\" data-uk-grid=\"true\">\n        <div>\n          {leftArticles.map((article, i) => {\n            return (\n              <Card\n                article={article}\n                key={`article__left__${article.node.slug}`}\n              />\n            )\n          })}\n        </div>\n        <div>\n          <div className=\"uk-child-width-1-2@m uk-grid-match\" data-uk-grid>\n            {rightArticles.map((article, i) => {\n              return (\n                <Card\n                  article={article}\n                  key={`article__right__${article.node.slug}`}\n                />\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Articles\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport ArticlesComponent from \"../components/articles\"\nimport \"../styles/global.css\"\n\nconst Blog = () => {\n  const data = useStaticQuery(query)\n  const {\n    strapiGlobal,\n    site: {\n      siteMetadata: {\n        languages: { locales, defaultLocale },\n      },\n    },\n  } = data\n  return (\n    <>\n      <SEO seo={{ title: \"404: Not found\" }} global={strapiGlobal} />\n\n      <Layout\n        pageContext={{\n          locale: defaultLocale,\n          locales,\n          defaultLocale,\n          slug: \"blog\",\n        }}\n        global={strapiGlobal}\n      >\n        <div className=\"uk-section\">\n          <div className=\"uk-container uk-container-large\">\n            <ArticlesComponent articles={data.allStrapiArticle.edges} />\n          </div>\n        </div>\n      </Layout>\n    </>\n  )\n}\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        languages {\n          locales\n          defaultLocale\n        }\n      }\n    }\n    strapiGlobal {\n      ...GlobalData\n    }\n    allStrapiArticle {\n      edges {\n        node {\n          strapiId\n          slug\n          title\n          category {\n            name\n          }\n          writer {\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Blog\n"],"sourceRoot":""}